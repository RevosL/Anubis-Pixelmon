config:{
  config-version: "4.0"
  #//Variables - {player} : the person who voted
  #//            {rewards} : The list of random rewards the player received

  #//Leaving this empty will disable messages from being shown publicly: Supports color and formatting codes
  broadcast-message: "&7&lVOTOS &7» &6&l{player} &avotou no servidor e recebeu vários itens, vote também usando: &6&l/vote"
  #//Set to true if you would like a message to be shown When the player votes even if they're offline.
  broadcast-offline: false
  #// Message to be shown
  broadcast-message-offline: ""
  #//Set to true if you want commands to run even if the player is not online. No offline vote information will be stored
  bypass-offline: false

  #//The number of random rewards that will be given out.
  #// -1 will have the system select a number of rewards between rewards-min and rewards-max;
  #// 0 will have the system give out no random rewards
  #// 1 or more will have the system choose random rewards exactly that number of times
  random-rewards-number: -1
  #//Having min and max set between 1 and 4 respectively ,for instance, will have the system choose to give out a random reward
  #//which is between those two numbers. Possibly a 1, a 2, a 3, or a 4.
  rewards-min:1
  rewards-max:1
  #// Under random You can set The tables you would like to use with weights in front for there to be a random chance of choosing from a table.
  #//In the case that there is only one table it will be chosen.
  vote-reward:{
    #//Here you will put the name of the tables and their chances that rewards will be chosen from.
    #// In the example you have 3 tables and their chances add up to 25. Chances must be integers.
    #//     CHANCES     TABLE-ID
    #//     =======================
    #//       "8",    "TableCommon",
    #//       "7",    "TableClaims",
    #//       "10",    "TableYearly"
    #//     ========================
    #//     TOTAL = 25
    #// Using this you can calculate how likely it is that anyone of these tables will be chosen when a random reward is rolled for.
    #// I.E. if I were to vote and get 1 random reward, I have 10 chances out of 25 to get a "TableYearly" Reward or 40% chance.
    random:[
      "25", "TableCommon"
    ]
    #// The commands in set will be run everytime a person casts a vote.
    set:["command 1"]
  }
  #//Tables are groups of rewards which work as a weighted system. Below are a few examples, but they are very simple and not too elaborate.
  #//   Much like the rewards, the Tables are re-usable. As a matter of fact the Tables are needed by all "Random" rewards areas.
  #//   They are pretty basic to use, Give it an id (no two id's should be the same) and then make a list with alternating weights and reward ids
  #//   The weights are pretty simple to use, the higher number a reward has the likelier it is to be chosen. in the "TableCommon" below 'money1' has
  #//   25/95 chances to be chosen.
  #//            CHANCES     REWARD-ID
  #//           =======================
  #//            "70",    "tomahawk",
  #//            "25",    "money1",
  #//           ========================
  #//           TOTAL = 95
  #//   You can use this to make common, rare , and super rare (etc...) tables which can be used together when you
  #//   want more control over what is being given out.
  #//
  #//TLDR: Once a reward has been rolled for and one of these tables chosen, The system will roll again for an item in that table with
  #//   the chances provided here.
  Tables {

    TableCommon: [
      "100", "tomahawk"
    ]



  }

  //# These are the Rewards. In essence each reward is a set of commands with a name that can be re-used in different tables.
  //#   Each Reward Requires an id "which is the descriptor / identifier such as tomahawk: in the tomahawk reward. Make sure to avoid spaces.
  //#   In addition each reward requires a name key, and a reward key
  //#   The value for name is just a text String (This can be used to Call it out in the broadcast built in)
  //#   The value for the rewards string is a list of strings. Each String should be a full command and can include the standard variables
  //#   Each new command string needs a comma before it. If your command requires quotations make sure to add escape characters
  //#     i.e ----"hello how "are" you"---- is not valid the string should be escaped as follows
  //#         ----"hello how \"are\" you---- The backslash allows the " to be escaped to be ignored by the parser
  //#
  //# Every single Reward should have it's id be unique, i.e there should not be more than one tomahawk ect... The name of the items can
  //# be duplicated though, so a tomahawk1, and a tomahawk2, can have "Steel Tomahawk" as the name"

  Rewards {
  
	tomahawk: {
      name: "Steel Tomahawk"
      rewards: [
        "give {player} pixelmon:quick_ball 15",
		"give {player} pixelmon:great_ball 10",
		"give {player} pixelmon:ultra_ball 10",
		"eco add {player} coin 10000",
		"hc key voto {player}",
		"tell {player} voce recebeu 10000 PokeDollars E Uma Chave De Voto"
      ]
    }


  }

  #//This Message will Show above the Links.
  vote-sites-message: "&6Abaixo estão os sites que você pode votar"

  #// Your website voting links, displayed by /vote, these support color formatting. Creates clickable links.
  #//seriousvotes.commands.vote
  vote-sites:[
	"&9https://minecraft-mp.com/server/273491/vote/",	"&9https://minecraftservers.org/vote/600516"
  ]


  #// The Milestones Module Requires a Mysql System Setup
  database:{
    hostname: "127.0.0.0"
    port: "3306"
    name: "COT_SeriousVote"
    prefix: "SV_"
    username: "root"
    password: "You need a password"
    minimum-idle-connections: 5
    maximum-active-connections: 10
  }

  #// Currently we have monthly weekly and yearly, put what you need in the set rewards. these commands will be run
  #// When a player votes X amount of days in a row, 365,30, 7
  dailies: {
    enabled: false

    weekly: {
      message: "This person has earned a 7 day in a row Reward!"
      random:[
        "27", "TableWeekly"
      ]
      set:[
        "say This is a set weekly {player} Reward",
      ]
    }
    monthly: {
      message: "This person has earned a monthly vote Reward!"
      random:[
        "27", "TableMonthly"
      ]
      set:[
        "say This is a set Monthly {player} Reward",
        "acb {player} bananaphone"
      ]
    }
    yearly: {
      message: "This person has earned a one year of straight voting reward"
      random:[
        "27", "TableYearly"
      ]
      set:[
        "say This is a set Yearly {player} Reward",
        "say Crap, you must play alot"
      ]
    }
  }


  milestones: {
    enabled: false
    #//place the number of votes you'd like to enable milestones for inside the brackets separated by commas.
    records-enabled:["100","1","37"]
    #// The setup for these is just the same as the normal voting. The tables must be defined in the table section in order for them to be used.
    records:{
      100:{
        message: "&4{player} has voted for a 100th time in a row!"
        random:[
          "27", "claimblocks"
        ]
        set: []
      }
      1:{
        random:[]
        set: ["one command","two command", "three command", "floor"]
      }

    }

  }
}
